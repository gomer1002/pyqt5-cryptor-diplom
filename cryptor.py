class Cryptor:
    code_morse_braile = {
        "а": [".-", "⠁"],
        "б": ["-...", "⠃"],
        "в": [".--", "⠺"],
        "г": ["--.", "⠛"],
        "д": ["-..", "⠙"],
        "е": [".", "⠑"],
        "ж": ["...-", "⠚"],
        "з": ["--...", "⠵"],
        "и": ["..", "⠊"],
        "й": [".---", "⠯"],
        "к": ["-.-", "⠅"],
        "л": [".-..", "⠇"],
        "м": ["--", "⠍"],
        "н": ["-.", "⠝"],
        "о": ["---", "⠕"],
        "п": [".--.", "⠏"],
        "р": [".-.", "⠗"],
        "с": ["...", "⠎"],
        "т": ["-", "⠞"],
        "у": ["..-", "⠥"],
        "ф": ["..-.", "⠋"],
        "х": ["....", "⠓"],
        "ц": ["-.-.", "⠉"],
        "ч": ["---.", "⠟"],
        "ш": ["----", "⠱"],
        "щ": ["--.-", "⠭"],
        "ъ": ["--.--", "⠷"],
        "ы": ["-.--", "⠮"],
        "ь": ["-..-", "⠾"],
        "э": ["..-..", "⠪"],
        "ю": ["..--", "⠳"],
        "я": [".-.-", "⠫"],
        " ": ["......", "⠼"],
        "1": [".----", "⠁"],
        "2": ["..---", "⠃"],
        "3": ["...--", "⠉"],
        "4": ["....-", "⠙"],
        "5": [".....", "⠑"],
        "6": ["-....", "⠋"],
        "7": ["--...", "⠛"],
        "8": ["---..", "⠓"],
        "9": ["----.", "⠊"],
        "0": ["-----", "⠚"],
        ",": [".-.-.-", "⠂"],
        ";": ["-.-.-.", "⠰"],
        ":": ["---...", "⠒"],
        "?": ["..--..", "⠢"],
        "!": ["--..--", "⠖"],
        "-": ["-....-", "⠤"],
        '"': [".-..-.", "⠦"],
    }

    # ----------------------------------------

    # функция кодирования из одного в другое
    @classmethod
    def encode(cls, text, key):
        try:
            # в конец добавляем пробел, этого требует логика работы
            text += " "
            # определяем кодировку полученного текста
            encoding = cls.get_encoding(text)
            # получаем значения из нашего словаря
            temp_list = list(cls.code_morse_braile.values())
            # создаем структуру списка, с которым будем работать
            lib = [[], []]
            # в цикле разделяем значение на два списка
            for each in temp_list:
                lib[0].append(each[0])
                lib[1].append(each[1])
            # после разделения добавляем в конец список с ключами нашего словаря
            lib.append(list(cls.code_morse_braile.keys()))
            # в итоге получаем следующую структуру
            # lib = [[морзе],[брайль],[кириллица]]

            ##блок который кодирует строку в зависимотри от заданных параметрв
            out = ""
            # если кодировка исходного текста и целевая кодировка идентичны
            # просто выводим то, что получили
            if encoding == key:
                out = text
            else:
                # если исходная кодировка не кириллица
                if encoding != 2:
                    word = ""
                    # проходим по символам в тексте
                    for letters in text:
                        # если символ - не пробел
                        if letters != " ":
                            # записываем символ в слово и обнуляем счетчик пробелов
                            word += letters
                            space_found = 0
                        else:
                            # иначе увеличиваем счетчик
                            space_found += 1
                            # если целевая кодировка не кириллица
                            if key != 2:
                                # то вместе со словом добавляем пробел
                                out = out + lib[key][lib[encoding].index(word)] + " "
                            else:
                                # иначе пробел не добавляем
                                out = out + lib[key][lib[encoding].index(word)]
                            word = ""
                else:
                    # если исходная кодировка - кириллица
                    # то обрезаем крайние пробелы
                    text = text.strip(" ")
                    # проходим по символам в тексте
                    for letters in text:
                        # если символ - не пробел
                        if letters != "":
                            # в выход записываем значение, найденное по символу и по целевой кодировке
                            out = out + cls.code_morse_braile.get(letters)[key] + " "
                        else:
                            out += ""
            # обрезаем крайние пробелы
            out = out.strip(" ")
            # возвращаем
            return out
        except (TypeError) as e:
            pass
            # print("ERROR: cryptor::", str(e))

    # функция получения кодировки
    @classmethod
    def get_encoding(cls, text):
        # все то же самое что и в прошлой функции
        text += " "

        temp_list = list(cls.code_morse_braile.values())
        lib = [[], []]
        for each in temp_list:
            lib[0].append(each[0])
            lib[1].append(each[1])

        lib.append(list(cls.code_morse_braile.keys()))

        word = ""
        space_found = 0
        for letters in text:
            if letters != " ":
                word += letters
                space_found = 0
            else:
                space_found += 1
                if space_found != 2:
                    # осуществляем поиск слова по нашей lib
                    # если слово в нулевом списке, то исходная кодировка - морзе
                    if word in lib[0]:
                        encoding = 0
                        break
                    # иначе если слово в первом списке, то исходная кодировка - брайль
                    elif word in lib[1]:
                        encoding = 1
                        break
                    # иначе кириллица
                    else:
                        encoding = 2
                        break
        # возвращаем полученное значение
        return encoding
